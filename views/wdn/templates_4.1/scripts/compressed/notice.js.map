{"version":3,"file":"notice.js","sources":["require-css/css!js-css/notices","notice.js"],"names":["define","$","selectorNamespace","animationSpeed","defaultDuration","durationMultiplier","initd","closeNotice","$el","fadeOut","remove","Plugin","initialize","document","on","this","closest","launch","each","overlayClass","duration","durationMatch","isOverlay","overlayMatch","overlayHeader","overlayMaincontent","data","is","addClass","removeClass","append","prepend","isNaN","classList","className","split","i","classMatch","match","RegExp","setTimeout"],"mappings":"AAAA,AACAA,OAAA,oCAAA,cCDAA,ODEA,UCDA,SACA,0BACA,SAAAC,GACA,GAAAC,GAAA,cACAC,EAAA,OACAC,EAAA,IACAC,EAAA,IACAC,GAAA,EAEAC,EAAA,SAAAC,GACAA,EAAAC,QAAAN,EAAA,WACAK,EAAAE,YAIAC,GACAC,WAAA,WAEAN,IAEAL,EAAAY,UAAAC,GAAA,QAAAZ,EAAA,UAAA,WAEA,MADAK,GAAAN,EAAAc,MAAAC,QAAAd,KACA,IAGAI,GAAA,GAGAL,EAAAU,EAAAM,SAGAA,OAAA,WAEAhB,EAAAC,GAAAgB,KAAA,WACA,GAMAC,GACAC,EAPAZ,EAAAP,EAAAc,MACAM,EAAA,WACAC,GAAA,EACAC,EAAA,UACAC,EAAA,SACAC,EAAA,aAKAN,GAAAI,EAAA,IAAAC,GACAhB,EAAAkB,KAAAH,KAAAC,GAAAhB,EAAAmB,GAAA,IAAAR,MACAG,GAAA,EACAd,EAAAoB,SAAAL,GAAAM,YAAAV,GACAlB,EAAA,IAAAuB,GAAAM,OAAAtB,IAGAW,EAAAI,EAAA,IAAAE,EACAH,GAAAd,EAAAkB,KAAAH,KAAAE,IAAAjB,EAAAmB,GAAA,IAAAR,KACAG,GAAA,EACAd,EAAAoB,SAAAL,GAAAM,YAAAV,GACAlB,EAAA,IAAAwB,GAAAM,QAAAvB,KAIAA,EAAAkB,KAAAL,IAAAb,EAAAmB,GAAA,WAAAN,EAAA,SACAD,EAAAZ,EAAAkB,KAAAL,GAAAhB,GAEA2B,MAAAZ,IAAA,EAAAA,IACAnB,EAAAiB,KAAAV,EAAA,GAAAyB,WAAAzB,EAAA,GAAA0B,UAAAC,MAAA,OAAA,SAAAC,EAAAF,GACA,GAAAG,GAAAH,EAAAI,MAAA,GAAAC,QAAA,IAAAlB,EAAA,UACA,OAAAgB,IACAjB,EAAAiB,EAAA,GAAAhC,GACA,GAFA,UAOA2B,MAAAZ,IAAA,EAAAA,KACAA,EAAAhB,GAGAoC,WAAA,WACAjC,EAAAC,IACAY,OAMA,OAAAT;ADpFA;ACDA,ADEA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\ndefine('require-css/css!js-css/notices',[],function(){});\n","define('notice',[\n\t'jquery',\n\t'css!js-css/notices.css'\n], function($) {\n\tvar selectorNamespace = '.wdn_notice';\n\tvar animationSpeed = 'slow';\n\tvar defaultDuration = 1000;\n\tvar durationMultiplier = 1000; // seconds to milliseconds\n\tvar initd = false;\n\t\n\tvar closeNotice = function($el) {\n\t\t$el.fadeOut(animationSpeed, function() {\n\t\t\t$el.remove();\n\t\t});\n\t};\n\n\tvar Plugin = {\n\t\tinitialize : function() {\n\t\t\t// prevent double initialiation\n\t\t\tif (!initd) {\n\t\t\t\t// globally listen for notice close button clicks\n\t\t\t\t$(document).on('click', selectorNamespace + ' .close', function() {\n\t\t\t\t\tcloseNotice($(this).closest(selectorNamespace));\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tinitd = true;\n\t\t\t}\n\t\t\t\n\t\t\t$(Plugin.launch);\n\t\t},\n\n\t\tlaunch : function() {\n\t\t\t// check each existing notice for special interactive features\n\t\t\t$(selectorNamespace).each(function() {\n\t\t\t\tvar $el = $(this);\n\t\t\t\tvar durationMatch = 'duration';\n\t\t\t\tvar isOverlay = false;\n\t\t\t\tvar overlayMatch = 'overlay';\n\t\t\t\tvar overlayHeader = 'header';\n\t\t\t\tvar overlayMaincontent = 'maincontent';\n\t\t\t\tvar overlayClass;\n\t\t\t\tvar duration;\n\n\t\t\t\t// check for overlay changers\n\t\t\t\toverlayClass = overlayMatch + '-' + overlayHeader;\n\t\t\t\tif ($el.data(overlayMatch) === overlayHeader || $el.is('.' + overlayClass)) {\n\t\t\t\t\tisOverlay = true;\n\t\t\t\t\t$el.addClass(overlayMatch).removeClass(overlayClass);\n\t\t\t\t\t$('#' + overlayHeader).append($el);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toverlayClass = overlayMatch + '-' + overlayMaincontent;\n\t\t\t\tif (!isOverlay && ($el.data(overlayMatch) === overlayMaincontent || $el.is('.' + overlayClass))) {\n\t\t\t\t\tisOverlay = true;\n\t\t\t\t\t$el.addClass(overlayMatch).removeClass(overlayClass);\n\t\t\t\t\t$('#' + overlayMaincontent).prepend($el);\n\t\t\t\t}\n\n\t\t\t\t// check for auto-closing duration\n\t\t\t\tif ($el.data(durationMatch) || $el.is('[class*=' + durationMatch + '-]')) {\n\t\t\t\t\tduration = $el.data(durationMatch) * durationMultiplier;\n\n\t\t\t\t\tif (isNaN(duration) || duration < 1) {\n\t\t\t\t\t\t$.each($el[0].classList || $el[0].className.split(/\\s+/), function(i, className) {\n\t\t\t\t\t\t\tvar classMatch = className.match(new RegExp('^' + durationMatch + '-(.+)$'))\n\t\t\t\t\t\t\tif (classMatch) {\n\t\t\t\t\t\t\t\tduration = classMatch[1] * durationMultiplier;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isNaN(duration) || duration < 1) {\n\t\t\t\t\t\tduration = defaultDuration;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tcloseNotice($el);\n\t\t\t\t\t}, duration);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn Plugin;\n});\n\n"]}